<h1>About</h1>
<p>網頁: 請填入目前網站所在的 URL, <a href="https://mde.tw/cmsimde_site">https://mde.tw/cmsimde_site</a></p>
<p>網誌: 請填入目前網站所在的 URL/blog, <a href="https://mde.tw/cmsimde_site/blog">https://mde.tw/cmsimde_site/blog</a></p>
<p>簡報: 請填入目前網站所在的 URL/reveal, <a href="https://mde.tw/cmsimde_site/reveal">https://mde.tw/cmsimde_site/reveal</a></p>
<p>倉儲: 請填入目前網站所對應的 Github 倉儲連結</p>
<p>本 cmsimde 網際內容管理系統的對應 Template 倉儲:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a></p>
<p style="padding-left: 30px;">此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改</p>
<p style="padding-left: 30px;">倉儲對應網站: <a href="https://mde.tw/cmsimde_site">https://mde.tw/cmsimde_site</a></p>
<h1>WCM課程期中整理</h1>
<h2>網頁式內容管理</h2>
<p><span>如何建立 Github 上的網站?</span></p>
<ol>
<li>
<p><strong><span>建立GitHub倉庫：</span></strong><span>首先，在GitHub上建立一個新的倉庫（Repository），命名為</span><code>username.github.io</code><span>，其中</span><code>username</code><span>是你的GitHub使用者名稱。這個特定命名的倉庫將會成為你的GitHub Pages網站的主頁。</span></p>
</li>
<li>
<p><strong><span>上傳網站檔案：</span></strong><span>將你的網站檔案上傳到這個新建立的倉庫。你可以上傳HTML、CSS、JavaScript和其他靜態檔案。確保主頁檔案的命名是</span><code>index.html</code><span>，這樣GitHub Pages就能夠自動辨識它作為網站的入口頁面。</span></p>
</li>
<li>
<p><strong><span>造訪你的網站：</span></strong><span>在倉庫的設定頁面中，找到GitHub Pages選項，在「Source」下選擇你的主分支（通常是</span><code>master</code><span>或</span><code>main</code><span>），儲存設定。稍等片刻，你的網站就會在</span><code>https://username.github.io</code><span>（其中</span><code>username</code><span>是你的GitHub用戶名）上訪問。</span></p>
</li>
</ol>
<p><span> Github如何管理內容? </span></p>
<ol>
<li>
<p><strong><span>版本控制：</span></strong><span> GitHub基於Git版本控制系統，透過追蹤檔案的修改、新增和刪除等操作，幫助使用者管理專案的歷史變更記錄。使用者可以使用Git指令或GitHub網站介面提交（commit）修改，然後將其推送（push）到GitHub倉庫。</span></p>
</li>
<li>
<p><strong><span>分支管理：</span></strong><span>使用者可以在GitHub上建立和管理多個分支（Branch），每個分支都是程式碼庫的獨立副本。分支可以用於並行開發不同的功能或修復不同的bug，最終將分支合併（merge）到主分支（如</span><code>master</code><span>或</span><code>main</code><span>）。</span></p>
</li>
<li>
<p><strong><span>問題追蹤：</span></strong><span> GitHub提供了Issues功能，用於追蹤專案中的問題、建議或任務。使用者可以建立新的Issue，並在其中描述問題、指派負責人、設定標籤等。其他團隊成員可以對Issue進行評論、討論，以協作解決問題。</span></p>
</li>
<li>
<p><strong><span>專案管理：</span></strong><span> GitHub的Projects功能可讓使用者建立專案板（Project board），將Issue和Pull Request（PR）組織到不同的欄位中，以便追蹤任務的進度和狀態。使用者可以使用專案板進行任務分配、進度追蹤和團隊協作。</span></p>
</li>
<li>
<p><strong><span>程式碼審查：</span></strong><span> GitHub上的Pull Request功能允許開發人員將自己的程式碼變更提交到主程式碼庫，並請求其他團隊成員進行審查。審查者可以查看程式碼變更、提出評論和建議，最終將其批准並合併到主分支中。</span></p>
</li>
<li>
<p><strong><span>文件編寫：</span></strong><span> GitHub可以用於編寫和託管文檔，使用者可以使用Markdown語法編寫文檔，並將其保存在GitHub倉庫中。 GitHub還提供了Wiki功能，可更方便地組織和瀏覽文件。</span></p>
</li>
</ol>
<p><span> Github如何建立網頁系統中的網誌? </span></p>
<ol>
<li>
<p><strong><span>建立存儲庫</span></strong><span>: 在GitHub上建立一個新的存儲庫，命名它為你的網誌。你可以使用個人或組織的存儲庫。</span></p>
</li>
<li>
<p><strong><span>選擇主題</span></strong><span>: 如果你想要快速建立一個網誌，你可以使用GitHub提供的一個預設主題。在存儲庫的設置中，找到GitHub Pages部分，選擇一個主題。</span></p>
</li>
<li>
<p><strong><span>創建網誌內容</span></strong><span>: 使用Markdown格式撰寫你的網誌文章。你可以在存儲庫中創建一個名為</span><code>_posts</code><span>的目錄，並在其中創建Markdown文件，每個文件代表一篇網誌文章。</span></p>
</li>
<li>
<p><strong><span>設置頁面</span></strong><span>: 在存儲庫的根目錄下，創建一個名為</span><code>index.md</code><span>的Markdown文件，這將是你的網誌的主頁。你可以在這個文件中添加一些簡介性的內容，以及鏈接到最新的幾篇網誌文章。</span></p>
</li>
<li>
<p><strong><span>發布網誌</span></strong><span>: 當你完成了網誌文章的編寫和設置後，將它們推送到GitHub存儲庫。GitHub Pages將自動將這些Markdown文件轉換為靜態網頁，並在你的GitHub Pages網址上顯示。</span></p>
</li>
</ol>
<h2>AI工具</h2>
<p>ChatGPT和Gemini Pro 這兩個工具可以協助我們解決什麼問題?</p>
<p><span>ChatGPT:</span><span class="d-inline-block" data-v-7f44ecea=""><span data-v-7f44ecea="">1. 簡單易用：ChatGPT 的界面簡單易用。</span></span></p>
<div data-v-7f44ecea=""><span class="d-inline-block" data-v-7f44ecea=""><span data-v-7f44ecea="">             </span></span>2. 開源：開發人員可以自由修改和使用代碼。</div>
<div data-v-7f44ecea=""><span></span>             3. 社區活躍：用戶可以獲得大量的幫助和支持。</div>
<p><span></span>Gemini Pro:<span class="d-inline-block" data-v-7f44ecea=""><span data-v-7f44ecea="">多模態能力(處理多種格式數據)</span></span><span class="d-inline-block" data-v-7f44ecea=""><span data-v-7f44ecea="">，強大性能，</span></span><span class="d-inline-block" data-v-7f44ecea=""><span data-v-7f44ecea="">容易使用</span></span></p>
<p>為什麼有這些工具?</p>
<p>有太多繁雜重複性的工作，人類覺得需要找方法解決。</p>
<p>有人卻覺得還好而已, 並無法從中挖出甚麼資料?</p>
<p>有人覺得天馬行空，有人問題沒有問對。</p>
<h2>網頁上的 IDE</h2>
<p>IDE 是甚麼?</p>
<div class="lb-none-v-margin lb-grid lb-small-pad lb-grid" data-eb-item-id="seo-faq-pairs#what-is-an-ide">
<div class="lb-row lb-row-max-large lb-snap eb-active">
<div class="lb-col lb-tiny-24 lb-mid-24">
<div class="lb-txt-14 lb-rtxt">
<p>協助程式設計師高效地開發軟體程式碼。</p>
</div>
</div>
</div>
</div>
<p>可以將 Replit、Codespaces 與 Gitpod 當成 IDE 用來開發各種程式嗎?</p>
<p>可以</p>
<p>學會網頁上的各種 IDE 之後, 有沒有甚麼感想或心得?</p>
<p>能更便捷的處理一些東西，讓他們變成自動化的模式。</p>
<h2>Python 程式系統</h2>
<p>舊 Python 建立新的可攜環境?</p>
<p><span>使用 </span><code>virtualenv</code><span> 來創建虛擬環境。</span></p>
<p>在網頁中置入 Python 語法的程式加上對 Javascript 與超文件語法的了解後, 能夠應用在那些領域?</p>
<div class="w-full text-token-text-primary" data-scroll-anchor="false" data-testid="conversation-turn-9" dir="auto">
<div class="py-2 px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5">
<div class="mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]">
<div class="relative flex w-full min-w-0 flex-col agent-turn">
<div class="flex-col gap-1 md:gap-3">
<div class="flex flex-grow flex-col max-w-full">
<div class="min-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto gap-3" data-message-author-role="assistant" data-message-id="7e9bbf86-252a-44b6-a42b-e5127ca741e8" dir="auto">
<div class="markdown prose w-full break-words dark:prose-invert light">
<p>網頁開發、數據處理、應用程序開發。</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>(精密)機械設計流程?</p>
<p>需求分析，概念設計，詳細設計，分析和驗證，原型製作，測試和驗證，生產準備，生產和專案交付，售後服務。</p>
<h2>分組專案</h2>
<p>給定<span> </span><a href="http://229.cycu.org/5j_wcm2024_midterm.csv">5j_wcm2024_midterm 資料</a><span> </span>與<span> </span><a href="http://229.cycu.org/1a_wcm2024_midterm.csv">1a_wcm2024_midterm 資料</a><span> </span>檔案, 包含學號、Github 帳號與組別. 請各組設法在分組網站與網誌中, 建立能連結到各分組組員的課程倉儲與網站連結頁面.將各組員的歷程網站與網誌整理到分組倉儲中.</p>
<p>處理方法:</p>
<ol>
<li>自行 key in 所需的超文件內容, 但必須了解有關 html anchor 與相關標註語法</li>
<li>了解希望完成的事項內容, 請 AI 協助處理轉檔</li>
<li>了解希望完成的事項內容, 請 AI 協助透過程式方法處理轉檔</li>
<li>
<p>每位組員在各自的倉儲編寫網誌文章, 然後整合至分組倉儲與網站.</p>
<p>每位組員在各自的倉儲寫專案報告，然後整合至分組倉儲並以 pdf 發佈.</p>
<p>每位組員在各自的倉儲編寫程式, 然後整合至分組倉儲與網站</p>
<h2>Brython</h2>
<p>透過與 AI 對話了解每一行程式的意義與用法:</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">from browser import document, html
from browser.widgets.dialog import InfoDialog
 
# Define a function to handle button click event
def on_click(event):
    # Get the value of the input field
    input_value = document["zone"].value
    # Output the value in the console
    print(input_value)
 
# Create input element with id "zone"
input_element = html.INPUT(id="zone")
 
# Create button element with id "echo" and text "click !"
button_element = html.BUTTON("click !", id="echo")
 
# Add event listener to the button
button_element.bind("click", on_click)
 
# Append input and button elements to the document body with "brython_div1"
document["brython_div1"] &lt;= input_element
document["brython_div1"] &lt;= button_element
 
def click(ev):
    InfoDialog("Hello", f"Hello, {document['zone'].value} !")
 
# bind event 'click' on button to callback function
document["echo"].bind("click", click)</pre>
<p><span>從</span><code>browser</code><span>模組匯入</span><code>document</code><span>和</span><code>html</code><span>。在Brython 中，</span><code>document</code><span>物件類似於JavaScript 中的</span><code>document</code><span>對象，它代表了目前HTML文件。</span></p>
<p><span></span><span></span><code>browser.widgets.dialog</code><span>模組</span><code>InfoDialog</code><span>類別導入了`<code>InfoDialog</code><span>類別。</span></span></p>
<span># 定義一個函數來處理按鈕點擊事件 def on_click(event): # 取得輸入欄位的值 input_value = document["zone"].value # 將值輸出到控制台 print(input_value) # 建立帶有 id 的 input 元素"zone" input_element = html.INPUT(id="zone") # 建立id 為「echo」、文字為「click !」的按鈕元素button_element = html.BUTTON("click !", id="echo") # 為按鈕新增事件監聽器 button_element.bind("click", on_click) # 使用 "brython_div1" 將輸入和按鈕元素附加到文件正文 document[ "brython_div1"] &lt;= input_element document["brython_div1"] &lt;= button_element def click(ev): InfoDialog("Hello", f"Hello, {document['zone'].value} !") # 綁定事件' click ' on 按鈕回呼函數 document["echo"].bind("click", click)</span></li>
</ol>
<h2>cmsimde</h2>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Codespaces</h1>
<p><a href="http://41223120.github.io/wcm2024">http://41223120.github.io/wcm2024</a> </p>
<h1>作業</h1>
<h2>W2</h2>
<p>1.確認所有學員已經建立帳號:<span>帶有以 Python 編寫的動態網站程式, 以及位於 content 目錄中的靜態網頁資料.</span></p>
<p>2.<span>確認學員會用replit維護網站:Replit 檢視動態網站或網誌推送到 Github 之前的內容, 必須要在動態與靜態模式中擇一使用</span></p>
<p><span>3.如何利用Codespaces維護網站:Codespaces 中維護 wcm2024 的過程幾乎如同在 localhost Windows 10 或 11 的操作系統環境中進行</span></p>
<h2>W3</h2>
<ol>
<li>
<div class="flex-1 overflow-hidden">
<div class="react-scroll-to-bottom--css-enhmt-79elbk h-full">
<div class="react-scroll-to-bottom--css-enhmt-1n7m0yu">
<div class="flex flex-col text-sm pb-9">
<div class="w-full text-token-text-primary" data-testid="conversation-turn-15">
<div class="px-4 py-2 justify-center text-base md:gap-6 m-auto">
<div class="flex flex-1 text-base mx-auto gap-3 md:px-5 lg:px-1 xl:px-5 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group final-completion">
<div class="relative flex w-full flex-col agent-turn">
<div class="flex-col gap-1 md:gap-3">
<div class="flex flex-grow flex-col max-w-full">
<div class="min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto" data-message-author-role="assistant" data-message-id="4e271a99-f50f-4da7-96eb-9a3994631cda">
<div class="markdown prose w-full break-words dark:prose-invert light">
<h3>常用的git指令:</h3>
<p>git 的新增、提交與推送指令:</p>
<p>git add . git commit -m "說明字串" git push</p>
<p>使用 git add . 表示要認列所進行的全部改版內容, git commit -m 執行之前, 若在近端使用, 必須先行設定 git config, 將 home_ipv6 目錄下的 .gitconfig 中明確列出改版者的身分, 其中包括:</p>
<p>git config --global user.name "提交者的 github 帳號名稱"</p>
<p>git config --global user.email "提交者在 github 所登錄的 email address"</p>
<p>使用可以利用 git version 查詢目前所使用的 git 版本.</p>
<p>git status 通常用來查核目前近端的改版狀況, 例如: 是否與遠端倉儲同步, 或者遠端倉儲已經有了新版本.</p>
<p>若遠端倉儲已經有新的版本, 則在 git push 之前, 必須設法取下遠端資料進行合併後, 才能再提交新的版本並推送到遠端.</p>
<p>git pull = git fetch + git merge</p>
<p>git submodule add 倉儲網址 子目錄</p>
<p>git clone 倉儲網址_協定.git 指定目錄與否</p>
<p>若要取下帶有子模組的倉儲, 且可能該子模組還有設定其他子模組, 則必須要加上 --recurse-submodules:</p>
<p>git clone --recurse-submodules 倉儲網址_協定.git 指定目錄與否</p>
<h2>W4</h2>
<p>有關建立網站:<span>網站指的是 Web site針對網頁瀏覽器檢視的內容加以管理，利用 Github 所提供的 Pages 功能來建立網頁進行管理。</span></p>
<p><span>Replit靜態網站檢視:若要執行動態網站，可以在 Shell 執行 python3 main.py 或者使用 Replit 的 Run 按鍵， Shell 執行 python3 main2.py 就可以執行倉儲內的靜態網站檢視。</span></p>
<p><span>Replit建立分組倉儲權限:</span></p>
<p>分組網站 import 到 Replit, 必須自行在 /home/runner/.ssh 目錄下建立 id_rsa 與 config (id_rsa.pub 必須登錄到 Github 對應帳號), 其中的 config 內容為:</p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_355090">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="jscript plain">Host github.com</code></div>
<div class="line number2 index1 alt1"><code class="jscript plain">User git</code></div>
<div class="line number3 index2 alt2"><code class="jscript plain">Hostname github.com</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>ssh.py 程式內容如下:</p>
<div>
<div class="syntaxhighlighter python" id="highlighter_462850">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="python keyword">import</code> <code class="python plain">os</code></div>
<div class="line number2 index1 alt1"><code class="python keyword">if</code> <code class="python keyword">not</code> <code class="python plain">os.path.exists(</code><code class="python string">"/home/runner/.ssh"</code><code class="python plain">): </code></div>
<div class="line number3 index2 alt2"><code class="python spaces">    </code><code class="python plain">os.makedirs(</code><code class="python string">"/home/runner/.ssh"</code><code class="python plain">) </code></div>
<div class="line number4 index3 alt1"><code class="python plain">os.system(</code><code class="python string">"mv ./downloads/id_rsa.txt /home/runner/.ssh/id_rsa"</code><code class="python plain">)</code></div>
<div class="line number5 index4 alt2"><code class="python plain">os.system(</code><code class="python string">"mv ./downloads/config.txt /home/runner/.ssh/config"</code><code class="python plain">)</code></div>
<div class="line number6 index5 alt1"><code class="python plain">os.system(</code><code class="python string">"chmod og-rwx /home/runner/.ssh/id_rsa"</code><code class="python plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<h2>W5</h2>
<p>以 iframe 嵌入先前的教學影片做課前預習</p>
<p>1.在Replit 平台上的分組倉儲權限設定</p>
<p>2.Putty Solvespace STL 零件檢視方法</p>
<p>3.大規模人工智慧運算的時代：前景、影響及回應</p>
</div>
</div>
<h2>W6</h2>
<p><span><span class="ui-provider rn uw ux uy uz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vu vv vw vx vy vz wa wb wc wd" dir="ltr">1.git 的發展歷史:</span></span><span><span class="ui-provider rn uw ux uy uz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vu vv vw vx vy vz wa wb wc wd" dir="ltr">世界上最流行的版本控制系统之一。</span></span></p>
<p>   git創作人相關履歷:是一位計算機學者，為現代軟體開發有重要的基礎。</p>
<p><span><span class="ui-provider rn uw ux uy uz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vu vv vw vx vy vz wa wb wc wd" dir="ltr">   一般相同專業人士如何利用git解決內容管理問題?:git可以追蹤檔案變化，可以多人對同一個專案進行工作，允許使用者創建分支，透過提交功能可以記錄每次對檔案的修改，git倉庫可以和遠端伺服器上進行備分，提供PR機制，允許成員對程式碼進行審查。</span></span></p>
<p><span><span class="ui-provider rn uw ux uy uz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vu vv vw vx vy vz wa wb wc wd" dir="ltr">2.假如要在 Windows 實際 demo git client 與 git server, 該如何進行?</span></span></p>
<p><strong> 選擇Git服務器：</strong> 可以選 GitLab、GitHub 。</p>
<p><strong>安裝 Git 伺服器軟體：</strong><span> </span>根據您選擇的 Git 伺服器軟體，按照其官方文件或指南進行安裝。這些軟體通常提供 Windows 版本的安裝程式，您可以下載並按照步驟進行安裝。</p>
<p><strong>配置 Git 伺服器：</strong><span> </span>安裝完成後，根據您的需求配置 Git 伺服器。</p>
<p><strong>啟動 Git 伺服器服務：</strong><span> </span>安裝完成後，啟動 Git 伺服器服務，確保其能夠正常運行。</p>
<p><strong>安裝 Git 客戶端：</strong><span> </span>在 Windows 上安裝 Git 客戶端。您可以從 Git 官方網站下載 Git for Windows </p>
<p><strong>配置 Git 客戶端：</strong><span> </span>安裝完成後，在命令行或圖形用戶界面中配置 Git 客戶端的使用者信息，包括使用者名稱和郵箱地址，以便提交程式碼時記錄作者信息。</p>
<ol>
<li>
<div class="flex-1 overflow-hidden">
<div class="react-scroll-to-bottom--css-enhmt-79elbk h-full">
<div class="react-scroll-to-bottom--css-enhmt-1n7m0yu">
<div class="flex flex-col text-sm pb-9">
<div class="w-full text-token-text-primary" data-testid="conversation-turn-15">
<div class="px-4 py-2 justify-center text-base md:gap-6 m-auto">
<div class="flex flex-1 text-base mx-auto gap-3 md:px-5 lg:px-1 xl:px-5 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group final-completion">
<div class="relative flex w-full flex-col agent-turn">
<div class="flex-col gap-1 md:gap-3">
<div class="flex flex-grow flex-col max-w-full">
<div class="min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto" data-message-author-role="assistant" data-message-id="4e271a99-f50f-4da7-96eb-9a3994631cda">
<div class="markdown prose w-full break-words dark:prose-invert light">
<ol>
<li>
<p><strong>Git clone 倉庫：</strong><span> </span>使用 Git 客戶端從 Git 伺服器上clone倉庫到本地電腦。您可以使用命令行或圖形用戶界面執行clone操作。例如，在命令行中執行<span> </span><code>git clone &lt;Git伺服器地址&gt;</code><span> </span>即可將倉庫克隆到本地。</p>
</li>
</ol>
<p><strong>演示 Git 操作：</strong></p>
<ol>
<li>
<p><strong>添加檔案和提交變更：</strong><span> </span>在本地克隆的倉庫中添加檔案、修改檔案，並使用 Git 客戶端提交這些變更到本地倉庫。</p>
</li>
<li>
<p><strong>推送變更到 Git 伺服器：</strong><span> </span>使用 Git 客戶端將本地倉庫中的變更推送到 Git 伺服器。您可以使用命令行或圖形用戶界面執行推送操作。</p>
</li>
<li>
<p><strong>拉取最新變更：</strong><span> </span>使用 Git 客戶端從 Git 伺服器中拉取最新的變更到本地倉庫，以確保本地倉庫與伺服器保持同步。</p>
</li>
</ol>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</li>
</ol>
<div class="w-full text-token-text-primary" data-testid="conversation-turn-5">
<div class="px-4 py-2 justify-center text-base md:gap-6 m-auto">
<div class="flex flex-1 text-base mx-auto gap-3 md:px-5 lg:px-1 xl:px-5 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group final-completion">
<div class="flex-shrink-0 flex flex-col relative items-end">
<div class="pt-0.5">
<h2 class="gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full">W8</h2>
<div class="gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full">1.教育的本質看課程內容:<span>培養對</span><strong>學習的渴望</strong><span>和</span><strong>對世界的好奇心，</strong><span>培養對</span><strong>學習的渴望</strong><span>和</span><strong>對世界的好奇心。</strong></div>
<div class="gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full">
<p dir="auto">廣泛的學習經驗：鼓勵學生<strong>探索不同科目和學科的廣泛教育的重要性</strong>。應該<strong>促進智識好奇心</strong>和<strong>批判性思維</strong>。</p>
<p dir="auto">2.如何將影片嵌入網頁:上傳影片到youtube上，之後到自己的youtube影片下，點<span>分享</span>選擇第一個，把右側<span>超連結程式</span>碼複製，編輯網站，點Source code<span>，</span>把內容複製貼上。</p>
<h2 dir="auto">W11</h2>
<p>Brython程式環境:</p>
<p>頁面 demo 在同一頁面下入多個線上 Ace 編輯器與執行按鈕 (<a href="https://zhe41223118.github.io/wcm2024/downloads/practice_html.txt">practice_html.txt</a><span> </span>動態頁面超文件).</p>
<p><a href="https://zhe41223118.github.io/wcm2024/downloads/practice_html.txt">practice_html.txt</a><span> </span>動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為<span> </span><a href="https://docs.python.org/3/tutorial/classes.html">class</a><span> </span>後, 在範例導入時透過<span> </span><a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a><span> </span>引用</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_1596">
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
</div>
</div>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator<span> </span><a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<div class="ace_editor ace-tm" id="kw_editor1"><textarea autocapitalize="off" autocorrect="off" class="ace_text-input" spellcheck="false" wrap="off"></textarea>
<div aria-hidden="true" class="ace_gutter">
<div class="ace_layer ace_gutter-layer ace_folding-enabled">
<div class="ace_gutter-cell">1</div>
<div class="ace_gutter-cell">2</div>
</div>
<div class="ace_gutter-active-line"><span class="ace_support ace_function">sum</span> <span class="ace_keyword ace_operator">=</span> <span class="ace_constant ace_numeric">1</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">2</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">3</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">4</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">5</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">6</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">7</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">8</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">9</span><span class="ace_keyword ace_operator">+</span><span class="ace_constant ace_numeric">10</span></div>
</div>
<div class="ace_scroller">
<div class="ace_content">
<div class="ace_layer ace_text-layer">
<div class="ace_line"><span class="ace_support ace_function">print</span><span class="ace_paren ace_lparen">(</span><span class="ace_support ace_function">sum</span><span class="ace_paren ace_rparen">)</span></div>
</div>
<div class="ace_layer ace_marker-layer"></div>
<div class="ace_layer ace_cursor-layer ace_hidden-cursors">
<div class="ace_cursor"><label>Filename:<span> </span><input id="kw_filename" placeholder="input file name" type="text"/>.py</label><span> </span><input type="submit" value="Save"/></div>
</div>
</div>
</div>
</div>
<p><button id="kw_show_console1">Run  Output</button><span> </span><button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<div><textarea autocomplete="off" id="kw_console1"></textarea></div>
<h2 dir="auto">W13</h2>
<p>Linux</p>
<p>能不能讓每一位學員都擁有遠端登入 stud.cycu.org 這台主機的帳號?</p>
<div class="flex flex-grow flex-col max-w-full">
<div class="min-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2" data-message-author-role="assistant" data-message-id="cad8176f-721c-46ae-aa7b-8b8cf24f1dff" dir="auto">
<div class="flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]">
<div class="markdown prose w-full break-words dark:prose-invert light">
<ol>
<li>
<p><strong>收集學員信息</strong>：</p>
<ul>
<li>確保擁有所有需要開設帳號的學員信息，例如學號、姓名、電子郵件等。</li>
</ul>
</li>
<li>
<p><strong>批量創建帳號</strong>：</p>
<ul>
<li>可以編寫腳本來自動創建多個用戶帳號。以下是一個簡單的 Bash 腳本範例，假設你有一個包含學員信息的 CSV 文件（例如 <code>students.csv</code>）：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span class="hljs-meta">#!/bin/bash</span> input=<span class="hljs-string">"students.csv"</span> <span class="hljs-keyword">while</span> IFS=, <span class="hljs-built_in">read</span> -r student_id student_name student_email <span class="hljs-keyword">do</span> sudo useradd -m <span class="hljs-string">"<span class="hljs-variable">$student_id</span>"</span> -c <span class="hljs-string">"<span class="hljs-variable">$student_name</span>"</span> -s /bin/bash <span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">$student_id</span>:default_password"</span> | sudo chpasswd <span class="hljs-built_in">echo</span> <span class="hljs-string">"User <span class="hljs-variable">$student_id</span> created with default password."</span> <span class="hljs-keyword">done</span> &lt; <span class="hljs-string">"<span class="hljs-variable">$input</span>"</span></div>
</div>
<ul>
<li>在這個腳本中，<code>students.csv</code> 文件格式為：<code>學號,姓名,電子郵件</code></li>
<li><code>default_password</code> 為初始密碼，建議用戶第一次登入後修改密碼。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>配置遠端登入</strong>：</p>
<ul>
<li>確保 SSH 服務已安裝並運行
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">
<div class="flex items-center"><code class="!whitespace-pre hljs language-bash">sudo apt-get update sudo apt-get install openssh-server sudo systemctl <span class="hljs-built_in">enable</span> ssh sudo systemctl start ssh </code></div>
</div>
</div>
</li>
<li>確保每個用戶都能通過 SSH 進行遠端登入：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><code class="!whitespace-pre hljs language-bash">sudo nano /etc/ssh/sshd_config </code></div>
</div>
<ul>
<li>檢查並確保 <code>PermitRootLogin</code> 設置為 <code>prohibit-password</code> 或 <code>no</code> 以提高安全性。</li>
<li>確保 <code>PasswordAuthentication</code> 設置為 <code>yes</code>。</li>
<li>保存文件並重啟 SSH 服務：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>bash </span>sudo systemctl restart ssh</div>
</div>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>通知學員</strong>：</p>
<ul>
<li>通知每位學員他們的帳號信息以及初始密碼，並提醒他們首次登入後立即修改密碼。</li>
</ul>
</li>
<li>
<p><strong>安全考慮</strong>：</p>
<ul>
<li>要求學員在首次登入後修改密碼，可以在 <code>/etc/skel/.bashrc</code> 中添加提示信息：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>bash</span>考慮設置失敗登入嘗試限制防止暴力破解：</div>
</div>
</li>
</ul>
</li>
</ol>
<p>這些步驟應該可以幫助你為所有學員創建遠端登入 stud.cycu.org 主機的帳號。</p>
</div>
</div>
</div>
</div>
<div class="mt-1 flex gap-3 empty:hidden juice:-ml-3">
<div class="items-center justify-start rounded-xl p-1 flex">
<div class="flex items-center">
<div class="flex items-center pb-0.5 juice:pb-0"><span class="line-clamp-1 text-sm"></span></div>
</div>
</div>
</div>
<p>擁有帳號, 然後呢?</p>
<div class="w-full text-token-text-primary" data-scroll-anchor="false" data-testid="conversation-turn-3" dir="auto">
<div class="py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5">
<div class="mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]">
<div class="group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn">
<div class="flex-col gap-1 md:gap-3">
<div class="flex flex-grow flex-col max-w-full">
<div class="min-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2" data-message-author-role="assistant" data-message-id="cad8176f-721c-46ae-aa7b-8b8cf24f1dff" dir="auto">
<div class="flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]">
<div class="markdown prose w-full break-words dark:prose-invert light"></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="w-full text-token-text-primary" data-scroll-anchor="true" data-testid="conversation-turn-5" dir="auto">
<div class="py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5">
<div class="mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]">
<div class="flex-shrink-0 flex flex-col relative items-end">
<div>
<div class="pt-0.5 juice:pt-0">
<div class="gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden rounded-full juice:h-8 juice:w-8">
<div class="relative p-1 rounded-sm flex items-center justify-center bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg class="icon-md" fill="none" height="41" role="img" viewbox="0 0 41 41" width="41" xmlns="http://www.w3.org/2000/svg"><text x="-9999" y="-9999">ChatGPT</text></svg></div>
</div>
</div>
</div>
</div>
<div class="group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn">
<div class="flex-col gap-1 md:gap-3">
<div class="flex flex-grow flex-col max-w-full">
<div class="min-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2" data-message-author-role="assistant" data-message-id="4e4d0f81-7147-41a0-9196-675f543e9fbe" dir="auto">
<div class="flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]">
<div class="markdown prose w-full break-words dark:prose-invert light">
<ul>
<li>主機名：stud.cycu.org</li>
<li>用戶名：例如學號</li>
<li>初始密碼：系統管理員提供的初始密碼</li>
</ul>
<h3>2. 使用 SSH 客戶端遠端登入</h3>
<p>學員需要一個 SSH 客戶端來連接到主機。以下是使用不同操作系統的簡單說明：</p>
<h4><strong>Windows</strong></h4>
<ul>
<li>可以使用 <a href="https://www.putty.org/" rel="noreferrer" target="_new">PuTTY</a> 或 <a rel="noreferrer" target="_new">Windows Terminal</a>。</li>
<li>打開 PuTTY，輸入 <code>stud.cycu.org</code> 作為主機名，並輸入用戶名和初始密碼。</li>
</ul>
<h4><strong>macOS 和 Linux</strong></h4>
<ul>
<li>打開終端（Terminal）。</li>
<li>輸入以下命令：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">ssh 學號@stud.cycu.org</div>
</div>
例如，如果學號是 <code>s1234567</code>，則輸入：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">ssh s1234567@stud.cycu.org</div>
</div>
</li>
</ul>
<h3>3. 修改初始密碼</h3>
<p>首次登入後，應立即修改初始密碼。可以使用 <code>passwd</code> 命令來修改：</p>
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">passwd</div>
</div>
<p>系統會提示輸入當前密碼，然後輸入並確認新密碼。</p>
<h3>4. 基本操作</h3>
<p>登入後，學員可以進行一些基本操作，例如：</p>
<ul>
<li><strong>查看當前目錄內容</strong>：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">ls</div>
</div>
</li>
<li><strong>創建目錄</strong>：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="overflow-y-auto p-4 text-left undefined" dir="ltr"><code class="!whitespace-pre hljs language-sh"><span class="hljs-built_in">mkdir</span> new_directory </code></div>
</div>
</li>
<li><strong>編輯文件</strong>： 可以使用 <code>nano</code>、<code>vi</code> 或 <code>vim</code> 來編輯文件，例如：
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">nano filename.txt</div>
</div>
</li>
</ul>
<h3>5. 設置 SSH 公鑰認證（可選）</h3>
<p>為了提高安全性，可以設置 SSH 公鑰認證。學員需要在自己的電腦上生成 SSH 密鑰對，並將公鑰上傳到主機：</p>
<h4><strong>生成 SSH 密鑰對</strong></h4>
<p>在學員本地終端中執行以下命令（macOS 和 Linux）：</p>
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="overflow-y-auto p-4 text-left undefined" dir="ltr"><code class="!whitespace-pre hljs language-sh">ssh-keygen -t rsa -b 4096 -C <span class="hljs-string">"your_email@example.com"</span> </code></div>
</div>
<p>這將生成一對密鑰，通常存儲在 <code>~/.ssh/</code> 目錄下。</p>
<h4><strong>上傳公鑰到主機</strong></h4>
<p>將公鑰上傳到 stud.cycu.org 主機：</p>
<div class="dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">
<div class="flex items-center relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">ssh-copy-id 學號@stud.cycu.org</div>
</div>
<h3>6. 確保資料安全</h3>
<p>提醒學員注意資料備份和安全：</p>
<ul>
<li>定期備份重要數據。</li>
<li>不要將敏感信息存儲在公共目錄中。</li>
<li>使用安全的密碼和兩步驗證（如有可能）。</li>
</ul>
<h3>7. 獲取幫助和支持</h3>
<p>如果在使用過程中遇到問題，可以：</p>
<ul>
<li>查閱系統提供的幫助文件或使用 <code>man</code> 命令（例如 <code>man ssh</code>）。</li>
<li>與系統管理員或技術支持團隊聯繫。</li>
</ul>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p><a href="https://mde.tw/wcm2024/downloads/wsgi_v2_py.txt">wsgi_v2_py</a>內截圖課表，用cmd解鎖課表</p>
<p>112年第1學期</p>
<p>112年第2學期課表</p>
<h2>W14</h2>
<p>可攜系統的批次檔案:</p>
<p>針對不同的Python版本修改批次檔案，兩個指令在path和set環境，版本不對就開不了。</p>
<p>Replit</p>
</div>
</div>
</div>
</div>
</div>
</div>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>stud.cycu.org 這台主機的帳號?然後呢</p>
</li>
</ol>